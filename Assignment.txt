create database assignment
use assignment


'1 . Create a loop for a table to insert a record into a tale for two columns in first coumn you have to inset a data ranging from 1 to 100 and in second column you hvae to inset a square of the first column 
 2 . create a user defined function to find out a date differences in number of days 
 3 . create a UDF to find out a log base 10 of any given number 
 4 . create a procedure which will be able to check a total number of records avaible in your table 
 5 . create a procedure to find out  5th highest profit in your sales table you dont have to use rank and windowing function
 6. upload bulk data'
 
 '6. upload bulk data'
 
 CREATE TABLE Online_Retail1 (
	`InvoiceNo` VARCHAR(7) NOT NULL, 
	`StockCode` VARCHAR(12) NOT NULL, 
	`Description` VARCHAR(35), 
	`Quantity` DECIMAL(38, 0) NOT NULL, 
	`InvoiceDate` VARCHAR (40) NOT NULL, 
	`UnitPrice` DECIMAL(38, 3) NOT NULL, 
	`CustomerID` DECIMAL(38, 0), 
	`Country` VARCHAR(20) NOT NULL
);

SET SESSION sql_mode = ''

LOAD DATA INFILE  
'D:/Online_Retail.csv'
into table Online_Retail1
FIELDS TERMINATED by ','
ENCLOSED by '"'
lines terminated by '\n'
IGNORE 1 ROWS;

select * from Online_Retail1

alter table Online_Retail1
add column Invoice_Date_New date after InvoiceDate 


'5. create a procedure to find out  5th highest profit in your sales table you dont have to use rank and windowing function '

use sales 
select * from sales1

select * from sales1 order by profit desc limit 4 , 1

Delimiter &&
create procedure profit_find()
deterministic
begin 
  select * from sales1 order by profit desc limit 4 , 1;
  end &&

call profit_find()

 '4 . create a procedure which will be able to check a total number of records avaible in your table '

Delimiter $$
create procedure prap_ten2 (IN tab_name varchar (40))
begin 
set @t1 = concat ('select count(*) from ', tab_name);
Prepare stmt3 from @t1;
execute stmt3; 
deallocate prepare stmt3; 
end $$

call prap_ten2('loop_table');

'1. Create a loop for a table to insert a record into a tale for two columns in first coumn you have to inset a data ranging from 1 to 100 and in second column you hvae to inset a square of the first column'

create table update_data4(val1 int, val2 int)
Delimiter &&
create procedure call_to_loop7()
begin
  set @var1 = 1;
  set @var2 = 1;
  generate_data : loop
  insert into update_data4 values (@var1, @var2);
  set @var1 = @var1 +1; 
  set @var2 = @var1 * @var1 ;
  if @var1 = 100 then 
	leave generate_data;
  end if; 
end loop generate_data; 
end &&

call call_to_loop7()
select * from update_data4

'3. create a UDF to find out a log base 10 of any given number '

DELIMITER &&
create function call_to_log_find1(a int)
returns decimal
deterministic
begin
    declare b int;
    set b = log10(a);
    return b;
end &&

select call_to_log_find1(25)


'2. create a user defined function to find out a date differences in number of days'

DELIMITER &&
create function call_to_date_diff(v1 date, v2 date)
returns int
deterministic
begin
    declare b int;
    set b = v1-v2;
    return b;
end &&

select call_to_date_diff('2011-05-10', '2011-05-01') as date_difference
